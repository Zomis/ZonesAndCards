package net.zomis.cards.hstone;

import java.util.Arrays;
import java.util.List;

import net.zomis.cards.hstone.factory.HStoneCardModel;
import net.zomis.cards.hstone.factory.HStoneMinionType;
import net.zomis.cards.hstone.sets.DruidCards;
import net.zomis.cards.hstone.sets.HunterCards;
import net.zomis.cards.hstone.sets.MageCards;
import net.zomis.cards.hstone.sets.ManaFiveCards;
import net.zomis.cards.hstone.sets.ManaFourCards;
import net.zomis.cards.hstone.sets.ManaOneCards;
import net.zomis.cards.hstone.sets.ManaSevenPlusCards;
import net.zomis.cards.hstone.sets.ManaSixCards;
import net.zomis.cards.hstone.sets.ManaThreeCards;
import net.zomis.cards.hstone.sets.ManaTwoCards;
import net.zomis.cards.hstone.sets.ManaZeroCards;
import net.zomis.cards.hstone.sets.PaladinCards;
import net.zomis.cards.hstone.sets.PriestCards;
import net.zomis.cards.hstone.sets.RogueCards;
import net.zomis.cards.hstone.sets.ShamanCards;
import net.zomis.cards.hstone.sets.WarlockCards;
import net.zomis.cards.hstone.sets.WarriorCards;
import net.zomis.cards.util.CardSet;

public class HStoneCards implements CardSet<HStoneGame> {

	@Override
	public void addCards(HStoneGame game) {
		// TODO: Page 45 and forward. Or rather: Make method HStoneLoad work.
		
		@SuppressWarnings("unchecked")
		List<CardSet<HStoneGame>> list = Arrays.asList(
			new ManaZeroCards(), new ManaOneCards(), new ManaTwoCards(), 
			new ManaThreeCards(), new ManaFourCards(), new ManaFiveCards(), 
			new ManaSixCards(), new ManaSevenPlusCards(),
			
			// Class specific cards:
			new MageCards(), new PriestCards(), new PaladinCards(), 
			new HunterCards(), new DruidCards(), new RogueCards(), 
			new ShamanCards(), new WarlockCards(), new WarriorCards()
		);
		
		for (CardSet<HStoneGame> set : list) {
			set.addCards(game);
		}
		
		fixClassSpecific(game);
		fixMinionTypes(game);
	}

	private void fixMinionTypes(HStoneGame game) {
		fixMinionType(game, "Chicken", HStoneMinionType.BEAST);
		fixMinionType(game, "Emerald Drake", HStoneMinionType.DRAGON);
		fixMinionType(game, "Hound", HStoneMinionType.BEAST);
		fixMinionType(game, "Murloc", HStoneMinionType.MURLOC);
		fixMinionType(game, "Whelp", HStoneMinionType.DRAGON);
		fixMinionType(game, "Bloodfen Raptor", HStoneMinionType.BEAST);
		fixMinionType(game, "Healing Totem", HStoneMinionType.TOTEM);
		fixMinionType(game, "Murloc Raider", HStoneMinionType.MURLOC);
		fixMinionType(game, "Oasis Snapjaw", HStoneMinionType.BEAST);
		fixMinionType(game, "River Crocolisk", HStoneMinionType.BEAST);
		fixMinionType(game, "Searing Totem", HStoneMinionType.TOTEM);
		fixMinionType(game, "Stoneclaw Totem", HStoneMinionType.TOTEM);
		fixMinionType(game, "Stonetusk Boar", HStoneMinionType.BEAST);
		fixMinionType(game, "Succubus", HStoneMinionType.DEMON);
		fixMinionType(game, "Timber Wolf", HStoneMinionType.BEAST);
		fixMinionType(game, "Voidwalker", HStoneMinionType.DEMON);
		fixMinionType(game, "Wrath of Air Totem", HStoneMinionType.TOTEM);
		fixMinionType(game, "Blood Imp", HStoneMinionType.DEMON);
		fixMinionType(game, "Bloodsail Raider", HStoneMinionType.PIRATE);
		fixMinionType(game, "Bluegill Warrior", HStoneMinionType.MURLOC);
		fixMinionType(game, "Boar", HStoneMinionType.BEAST);
		fixMinionType(game, "Core Hound", HStoneMinionType.BEAST);
		fixMinionType(game, "Devilsaur", HStoneMinionType.BEAST);
		fixMinionType(game, "Dire Wolf Alpha", HStoneMinionType.BEAST);
		fixMinionType(game, "Dread Corsair", HStoneMinionType.PIRATE);
		fixMinionType(game, "Dread Infernal", HStoneMinionType.DEMON);
		fixMinionType(game, "Faerie Dragon", HStoneMinionType.DRAGON);
		fixMinionType(game, "Flame Imp", HStoneMinionType.DEMON);
		fixMinionType(game, "Flametongue Totem", HStoneMinionType.TOTEM);
		fixMinionType(game, "Frog", HStoneMinionType.BEAST);
		fixMinionType(game, "Grimscale Oracle", HStoneMinionType.MURLOC);
		fixMinionType(game, "Huffer", HStoneMinionType.BEAST);
		fixMinionType(game, "Infernal", HStoneMinionType.DEMON);
		fixMinionType(game, "Ironbeak Owl", HStoneMinionType.BEAST);
		fixMinionType(game, "Ironfur Grizzly", HStoneMinionType.BEAST);
		fixMinionType(game, "Jungle Panther", HStoneMinionType.BEAST);
		fixMinionType(game, "Leokk", HStoneMinionType.BEAST);
		fixMinionType(game, "Misha", HStoneMinionType.BEAST);
		fixMinionType(game, "Murloc Scout", HStoneMinionType.MURLOC);
		fixMinionType(game, "Murloc Tidehunter", HStoneMinionType.MURLOC);
		fixMinionType(game, "Panther", HStoneMinionType.BEAST);
		fixMinionType(game, "Scavenging Hyena", HStoneMinionType.BEAST);
		fixMinionType(game, "Sheep", HStoneMinionType.BEAST);
		fixMinionType(game, "Silverback Patriarch", HStoneMinionType.BEAST);
		fixMinionType(game, "Snake", HStoneMinionType.BEAST);
		fixMinionType(game, "Southsea Deckhand", HStoneMinionType.PIRATE);
		fixMinionType(game, "Squirrel", HStoneMinionType.BEAST);
		fixMinionType(game, "Starving Buzzard", HStoneMinionType.BEAST);
		fixMinionType(game, "Stranglethorn Tiger", HStoneMinionType.BEAST);
		fixMinionType(game, "Tundra Rhino", HStoneMinionType.BEAST);
		fixMinionType(game, "Worthless Imp", HStoneMinionType.DEMON);
		fixMinionType(game, "Young Dragonhawk", HStoneMinionType.BEAST);
		fixMinionType(game, "Angry Chicken", HStoneMinionType.BEAST);
		fixMinionType(game, "Azure Drake", HStoneMinionType.DRAGON);
		fixMinionType(game, "Bloodsail Corsair", HStoneMinionType.PIRATE);
		fixMinionType(game, "Coldlight Oracle", HStoneMinionType.MURLOC);
		fixMinionType(game, "Coldlight Seer", HStoneMinionType.MURLOC);
		fixMinionType(game, "Doomguard", HStoneMinionType.DEMON);
		fixMinionType(game, "Emperor Cobra", HStoneMinionType.BEAST);
		fixMinionType(game, "Felguard", HStoneMinionType.DEMON);
		fixMinionType(game, "Hyena", HStoneMinionType.BEAST);
		fixMinionType(game, "Imp", HStoneMinionType.DEMON);
		fixMinionType(game, "Mana Tide Totem", HStoneMinionType.TOTEM);
		fixMinionType(game, "Murloc Tidecaller", HStoneMinionType.MURLOC);
		fixMinionType(game, "Savannah Highmane", HStoneMinionType.BEAST);
		fixMinionType(game, "Stampeding Kodo", HStoneMinionType.BEAST);
		fixMinionType(game, "Twilight Drake", HStoneMinionType.DRAGON);
		fixMinionType(game, "Void Terror", HStoneMinionType.DEMON);
		fixMinionType(game, "Captain's Parrot", HStoneMinionType.BEAST);
		fixMinionType(game, "Hungry Crab", HStoneMinionType.BEAST);
		fixMinionType(game, "Murloc Warleader", HStoneMinionType.MURLOC);
		fixMinionType(game, "Pit Lord", HStoneMinionType.DEMON);
		fixMinionType(game, "Southsea Captain", HStoneMinionType.PIRATE);
		fixMinionType(game, "Alexstrasza", HStoneMinionType.DRAGON);
		fixMinionType(game, "Captain Greenskin", HStoneMinionType.PIRATE);
		fixMinionType(game, "Deathwing", HStoneMinionType.DRAGON);
		fixMinionType(game, "Illidan Stormrage", HStoneMinionType.DEMON);
		fixMinionType(game, "King Krush", HStoneMinionType.BEAST);
		fixMinionType(game, "King Mukla", HStoneMinionType.BEAST);
		fixMinionType(game, "Lord Jaraxxus", HStoneMinionType.DEMON);
		fixMinionType(game, "Malygos", HStoneMinionType.DRAGON);
		fixMinionType(game, "Nozdormu", HStoneMinionType.DRAGON);
		fixMinionType(game, "Old Murk-Eye", HStoneMinionType.MURLOC);
		fixMinionType(game, "Onyxia", HStoneMinionType.DRAGON);
		fixMinionType(game, "The Beast", HStoneMinionType.BEAST);
		fixMinionType(game, "Ysera", HStoneMinionType.DRAGON);
	}

	private void fixMinionType(HStoneGame game, String string, HStoneMinionType subType) {
		HStoneCardModel model = game.getCardModel(string);
		if (model != null)
			model.addType(subType);
	}

	private void fixClassSpecific(HStoneGame game) {
		fixCardClass(game, "Defias Bandit", HStoneClass.ROGUE);
		fixCardClass(game, "Hound", HStoneClass.HUNTER);
		fixCardClass(game, "Treant", HStoneClass.DRUID);
		fixCardClass(game, "Treant", HStoneClass.DRUID);
		fixCardClass(game, "Healing Totem", HStoneClass.SHAMAN);
		fixCardClass(game, "Houndmaster", HStoneClass.HUNTER);
		fixCardClass(game, "Northshire Cleric", HStoneClass.PRIEST);
		fixCardClass(game, "Searing Totem", HStoneClass.SHAMAN);
		fixCardClass(game, "Silver Hand Recruit", HStoneClass.PALADIN);
		fixCardClass(game, "Stoneclaw Totem", HStoneClass.SHAMAN);
		fixCardClass(game, "Succubus", HStoneClass.WARLOCK);
		fixCardClass(game, "Timber Wolf", HStoneClass.HUNTER);
		fixCardClass(game, "Voidwalker", HStoneClass.WARLOCK);
		fixCardClass(game, "Warsong Commander", HStoneClass.WARRIOR);
		fixCardClass(game, "Wrath of Air Totem", HStoneClass.SHAMAN);
		fixCardClass(game, "Arathi Weaponsmith", HStoneClass.WARRIOR);
		fixCardClass(game, "Argent Protector", HStoneClass.PALADIN);
		fixCardClass(game, "Blood Imp", HStoneClass.WARLOCK);
		fixCardClass(game, "Cruel Taskmaster", HStoneClass.WARRIOR);
		fixCardClass(game, "Defender", HStoneClass.PALADIN);
		fixCardClass(game, "Defias Ringleader", HStoneClass.ROGUE);
		fixCardClass(game, "Dread Infernal", HStoneClass.WARLOCK);
		fixCardClass(game, "Druid of the Claw", HStoneClass.DRUID);
		fixCardClass(game, "Druid of the Claw", HStoneClass.DRUID);
		fixCardClass(game, "Druid of the Claw", HStoneClass.DRUID);
		fixCardClass(game, "Dust Devil", HStoneClass.SHAMAN);
		fixCardClass(game, "Fire Elemental", HStoneClass.SHAMAN);
		fixCardClass(game, "Flame Imp", HStoneClass.WARLOCK);
		fixCardClass(game, "Flametongue Totem", HStoneClass.SHAMAN);
		fixCardClass(game, "Guardian of Kings", HStoneClass.PALADIN);
		fixCardClass(game, "Huffer", HStoneClass.HUNTER);
		fixCardClass(game, "Infernal", HStoneClass.WARLOCK);
		fixCardClass(game, "Ironbark Protector", HStoneClass.DRUID);
		fixCardClass(game, "Kor'kron Elite", HStoneClass.WARRIOR);
		fixCardClass(game, "Leokk", HStoneClass.HUNTER);
		fixCardClass(game, "Lightspawn", HStoneClass.PRIEST);
		fixCardClass(game, "Mana Wyrm", HStoneClass.MAGE);
		fixCardClass(game, "Mirror Image", HStoneClass.MAGE);
		fixCardClass(game, "Misha", HStoneClass.HUNTER);
		fixCardClass(game, "Panther", HStoneClass.DRUID);
		fixCardClass(game, "Scavenging Hyena", HStoneClass.HUNTER);
		fixCardClass(game, "Snake", HStoneClass.HUNTER);
		fixCardClass(game, "Sorcerer's Apprentice", HStoneClass.MAGE);
		fixCardClass(game, "Starving Buzzard", HStoneClass.HUNTER);
		fixCardClass(game, "Summoning Portal", HStoneClass.WARLOCK);
		fixCardClass(game, "Temple Enforcer", HStoneClass.PRIEST);
		fixCardClass(game, "Treant", HStoneClass.DRUID);
		fixCardClass(game, "Tundra Rhino", HStoneClass.HUNTER);
		fixCardClass(game, "Unbound Elemental", HStoneClass.SHAMAN);
		fixCardClass(game, "Water Elemental", HStoneClass.MAGE);
		fixCardClass(game, "Windspeaker", HStoneClass.SHAMAN);
		fixCardClass(game, "Worthless Imp", HStoneClass.WARLOCK);
		fixCardClass(game, "Aldor Peacekeeper", HStoneClass.PALADIN);
		fixCardClass(game, "Armorsmith", HStoneClass.WARRIOR);
		fixCardClass(game, "Auchenai Soulpriest", HStoneClass.PRIEST);
		fixCardClass(game, "Doomguard", HStoneClass.WARLOCK);
		fixCardClass(game, "Ethereal Arcanist", HStoneClass.MAGE);
		fixCardClass(game, "Felguard", HStoneClass.WARLOCK);
		fixCardClass(game, "Frothing Berserker", HStoneClass.WARRIOR);
		fixCardClass(game, "Hyena", HStoneClass.HUNTER);
		fixCardClass(game, "Keeper of the Grove", HStoneClass.DRUID);
		fixCardClass(game, "Kirin Tor Mage", HStoneClass.MAGE);
		fixCardClass(game, "Lightwell", HStoneClass.PRIEST);
		fixCardClass(game, "Mana Tide Totem", HStoneClass.SHAMAN);
		fixCardClass(game, "Master of Disguise", HStoneClass.ROGUE);
		fixCardClass(game, "SI:7 Agent", HStoneClass.ROGUE);
		fixCardClass(game, "Savannah Highmane", HStoneClass.HUNTER);
		fixCardClass(game, "Spirit Wolf", HStoneClass.SHAMAN);
		fixCardClass(game, "Void Terror", HStoneClass.WARLOCK);
		fixCardClass(game, "Ancient of Lore", HStoneClass.DRUID);
		fixCardClass(game, "Ancient of War", HStoneClass.DRUID);
		fixCardClass(game, "Cabal Shadow Priest", HStoneClass.PRIEST);
		fixCardClass(game, "Earth Elemental", HStoneClass.SHAMAN);
		fixCardClass(game, "Kidnapper", HStoneClass.ROGUE);
		fixCardClass(game, "Patient Assassin", HStoneClass.ROGUE);
		fixCardClass(game, "Pit Lord", HStoneClass.WARLOCK);
		fixCardClass(game, "Shadow of Nothing", HStoneClass.PRIEST);
		fixCardClass(game, "Spellbender", HStoneClass.MAGE);
		fixCardClass(game, "Al'Akir the Windlord", HStoneClass.SHAMAN);
		fixCardClass(game, "Archmage Antonidas", HStoneClass.MAGE);
		fixCardClass(game, "Cenarius", HStoneClass.DRUID);
		fixCardClass(game, "Edwin VanCleef", HStoneClass.ROGUE);
		fixCardClass(game, "Grommash Hellscream", HStoneClass.WARRIOR);
		fixCardClass(game, "King Krush", HStoneClass.HUNTER);
		fixCardClass(game, "Lord Jaraxxus", HStoneClass.WARLOCK);
		fixCardClass(game, "Prophet Velen", HStoneClass.PRIEST);
		fixCardClass(game, "Tirion Fordring", HStoneClass.PALADIN);
		fixCardClass(game, "Excess Mana", HStoneClass.DRUID);
		fixCardClass(game, "Claw", HStoneClass.DRUID);
		fixCardClass(game, "Healing Touch", HStoneClass.DRUID);
		fixCardClass(game, "Innervate", HStoneClass.DRUID);
		fixCardClass(game, "Mark of the Wild", HStoneClass.DRUID);
		fixCardClass(game, "Wild Growth", HStoneClass.DRUID);
		fixCardClass(game, "Mark of Nature", HStoneClass.DRUID);
		fixCardClass(game, "Moonfire", HStoneClass.DRUID);
		fixCardClass(game, "Naturalize", HStoneClass.DRUID);
		fixCardClass(game, "Power of the Wild", HStoneClass.DRUID);
		fixCardClass(game, "Savage Roar", HStoneClass.DRUID);
		fixCardClass(game, "Soul of the Forest", HStoneClass.DRUID);
		fixCardClass(game, "Starfire", HStoneClass.DRUID);
		fixCardClass(game, "Swipe", HStoneClass.DRUID);
		fixCardClass(game, "Wrath", HStoneClass.DRUID);
		fixCardClass(game, "Bite", HStoneClass.DRUID);
		fixCardClass(game, "Nourish", HStoneClass.DRUID);
		fixCardClass(game, "Savagery", HStoneClass.DRUID);
		fixCardClass(game, "Starfall", HStoneClass.DRUID);
		fixCardClass(game, "Force of Nature", HStoneClass.DRUID);
		fixCardClass(game, "Arcane Shot", HStoneClass.HUNTER);
		fixCardClass(game, "Multi-Shot", HStoneClass.HUNTER);
		fixCardClass(game, "Tracking", HStoneClass.HUNTER);
		fixCardClass(game, "Animal Companion", HStoneClass.HUNTER);
		fixCardClass(game, "Deadly Shot", HStoneClass.HUNTER);
		fixCardClass(game, "Explosive Trap", HStoneClass.HUNTER);
		fixCardClass(game, "Freezing Trap", HStoneClass.HUNTER);
		fixCardClass(game, "Hunter's Mark", HStoneClass.HUNTER);
		fixCardClass(game, "Kill Command", HStoneClass.HUNTER);
		fixCardClass(game, "Snipe", HStoneClass.HUNTER);
		fixCardClass(game, "Unleash the Hounds", HStoneClass.HUNTER);
		fixCardClass(game, "Explosive Shot", HStoneClass.HUNTER);
		fixCardClass(game, "Flare", HStoneClass.HUNTER);
		fixCardClass(game, "Misdirection", HStoneClass.HUNTER);
		fixCardClass(game, "Bestial Wrath", HStoneClass.HUNTER);
		fixCardClass(game, "Snake Trap", HStoneClass.HUNTER);
		fixCardClass(game, "Arcane Explosion", HStoneClass.MAGE);
		fixCardClass(game, "Arcane Intellect", HStoneClass.MAGE);
		fixCardClass(game, "Arcane Missiles", HStoneClass.MAGE);
		fixCardClass(game, "Fireball", HStoneClass.MAGE);
		fixCardClass(game, "Polymorph", HStoneClass.MAGE);
		fixCardClass(game, "Cone of Cold", HStoneClass.MAGE);
		fixCardClass(game, "Flamestrike", HStoneClass.MAGE);
		fixCardClass(game, "Frost Nova", HStoneClass.MAGE);
		fixCardClass(game, "Frostbolt", HStoneClass.MAGE);
		fixCardClass(game, "Ice Barrier", HStoneClass.MAGE);
		fixCardClass(game, "Ice Lance", HStoneClass.MAGE);
		fixCardClass(game, "Mirror Entity", HStoneClass.MAGE);
		fixCardClass(game, "Mirror Image", HStoneClass.MAGE);
		fixCardClass(game, "Blizzard", HStoneClass.MAGE);
		fixCardClass(game, "Counterspell", HStoneClass.MAGE);
		fixCardClass(game, "Vaporize", HStoneClass.MAGE);
		fixCardClass(game, "Ice Block", HStoneClass.MAGE);
		fixCardClass(game, "Pyroblast", HStoneClass.MAGE);
		fixCardClass(game, "Spellbender", HStoneClass.MAGE);
		fixCardClass(game, "Blessing of Might", HStoneClass.PALADIN);
		fixCardClass(game, "Hammer of Wrath", HStoneClass.PALADIN);
		fixCardClass(game, "Hand of Protection", HStoneClass.PALADIN);
		fixCardClass(game, "Holy Light", HStoneClass.PALADIN);
		fixCardClass(game, "Blessing of Kings", HStoneClass.PALADIN);
		fixCardClass(game, "Blessing of Wisdom", HStoneClass.PALADIN);
		fixCardClass(game, "Consecration", HStoneClass.PALADIN);
		fixCardClass(game, "Eye for an Eye", HStoneClass.PALADIN);
		fixCardClass(game, "Humility", HStoneClass.PALADIN);
		fixCardClass(game, "Noble Sacrifice", HStoneClass.PALADIN);
		fixCardClass(game, "Redemption", HStoneClass.PALADIN);
		fixCardClass(game, "Repentance", HStoneClass.PALADIN);
		fixCardClass(game, "Blessed Champion", HStoneClass.PALADIN);
		fixCardClass(game, "Divine Favor", HStoneClass.PALADIN);
		fixCardClass(game, "Equality", HStoneClass.PALADIN);
		fixCardClass(game, "Holy Wrath", HStoneClass.PALADIN);
		fixCardClass(game, "Avenging Wrath", HStoneClass.PALADIN);
		fixCardClass(game, "Lay on Hands", HStoneClass.PALADIN);
		fixCardClass(game, "Holy Smite", HStoneClass.PRIEST);
		fixCardClass(game, "Mind Blast", HStoneClass.PRIEST);
		fixCardClass(game, "Power Word: Shield", HStoneClass.PRIEST);
		fixCardClass(game, "Shadow Word: Pain", HStoneClass.PRIEST);
		fixCardClass(game, "Circle of Healing", HStoneClass.PRIEST);
		fixCardClass(game, "Divine Spirit", HStoneClass.PRIEST);
		fixCardClass(game, "Holy Nova", HStoneClass.PRIEST);
		fixCardClass(game, "Inner Fire", HStoneClass.PRIEST);
		fixCardClass(game, "Mind Control", HStoneClass.PRIEST);
		fixCardClass(game, "Mind Vision", HStoneClass.PRIEST);
		fixCardClass(game, "Shadow Word: Death", HStoneClass.PRIEST);
		fixCardClass(game, "Silence", HStoneClass.PRIEST);
		fixCardClass(game, "Thoughtsteal", HStoneClass.PRIEST);
		fixCardClass(game, "Holy Fire", HStoneClass.PRIEST);
		fixCardClass(game, "Mass Dispel", HStoneClass.PRIEST);
		fixCardClass(game, "Shadow Madness", HStoneClass.PRIEST);
		fixCardClass(game, "Mindgames", HStoneClass.PRIEST);
		fixCardClass(game, "Shadowform", HStoneClass.PRIEST);
		fixCardClass(game, "Assassinate", HStoneClass.ROGUE);
		fixCardClass(game, "Backstab", HStoneClass.ROGUE);
		fixCardClass(game, "Deadly Poison", HStoneClass.ROGUE);
		fixCardClass(game, "Sap", HStoneClass.ROGUE);
		fixCardClass(game, "Sinister Strike", HStoneClass.ROGUE);
		fixCardClass(game, "Betrayal", HStoneClass.ROGUE);
		fixCardClass(game, "Cold Blood", HStoneClass.ROGUE);
		fixCardClass(game, "Conceal", HStoneClass.ROGUE);
		fixCardClass(game, "Eviscerate", HStoneClass.ROGUE);
		fixCardClass(game, "Fan of Knives", HStoneClass.ROGUE);
		fixCardClass(game, "Shadowstep", HStoneClass.ROGUE);
		fixCardClass(game, "Shiv", HStoneClass.ROGUE);
		fixCardClass(game, "Sprint", HStoneClass.ROGUE);
		fixCardClass(game, "Vanish", HStoneClass.ROGUE);
		fixCardClass(game, "Blade Flurry", HStoneClass.ROGUE);
		fixCardClass(game, "Headcrack", HStoneClass.ROGUE);
		fixCardClass(game, "Preparation", HStoneClass.ROGUE);
		fixCardClass(game, "Ancestral Healing", HStoneClass.SHAMAN);
		fixCardClass(game, "Frost Shock", HStoneClass.SHAMAN);
		fixCardClass(game, "Hex", HStoneClass.SHAMAN);
		fixCardClass(game, "Rockbiter Weapon", HStoneClass.SHAMAN);
		fixCardClass(game, "Windfury", HStoneClass.SHAMAN);
		fixCardClass(game, "Bloodlust", HStoneClass.SHAMAN);
		fixCardClass(game, "Earth Shock", HStoneClass.SHAMAN);
		fixCardClass(game, "Forked Lightning", HStoneClass.SHAMAN);
		fixCardClass(game, "Lightning Bolt", HStoneClass.SHAMAN);
		fixCardClass(game, "Totemic Might", HStoneClass.SHAMAN);
		fixCardClass(game, "Ancestral Spirit", HStoneClass.SHAMAN);
		fixCardClass(game, "Feral Spirit", HStoneClass.SHAMAN);
		fixCardClass(game, "Lava Burst", HStoneClass.SHAMAN);
		fixCardClass(game, "Lightning Storm", HStoneClass.SHAMAN);
		fixCardClass(game, "Far Sight", HStoneClass.SHAMAN);
		fixCardClass(game, "Drain Life", HStoneClass.WARLOCK);
		fixCardClass(game, "Hellfire", HStoneClass.WARLOCK);
		fixCardClass(game, "Shadow Bolt", HStoneClass.WARLOCK);
		fixCardClass(game, "Corruption", HStoneClass.WARLOCK);
		fixCardClass(game, "Demonfire", HStoneClass.WARLOCK);
		fixCardClass(game, "Mortal Coil", HStoneClass.WARLOCK);
		fixCardClass(game, "Power Overwhelming", HStoneClass.WARLOCK);
		fixCardClass(game, "Sacrificial Pact", HStoneClass.WARLOCK);
		fixCardClass(game, "Sense Demons", HStoneClass.WARLOCK);
		fixCardClass(game, "Soulfire", HStoneClass.WARLOCK);
		fixCardClass(game, "Shadowflame", HStoneClass.WARLOCK);
		fixCardClass(game, "Siphon Soul", HStoneClass.WARLOCK);
		fixCardClass(game, "Bane of Doom", HStoneClass.WARLOCK);
		fixCardClass(game, "Twisting Nether", HStoneClass.WARLOCK);
		fixCardClass(game, "Charge", HStoneClass.WARRIOR);
		fixCardClass(game, "Execute", HStoneClass.WARRIOR);
		fixCardClass(game, "Heroic Strike", HStoneClass.WARRIOR);
		fixCardClass(game, "Battle Rage", HStoneClass.WARRIOR);
		fixCardClass(game, "Cleave", HStoneClass.WARRIOR);
		fixCardClass(game, "Inner Rage", HStoneClass.WARRIOR);
		fixCardClass(game, "Rampage", HStoneClass.WARRIOR);
		fixCardClass(game, "Shield Block", HStoneClass.WARRIOR);
		fixCardClass(game, "Slam", HStoneClass.WARRIOR);
		fixCardClass(game, "Whirlwind", HStoneClass.WARRIOR);
		fixCardClass(game, "Commanding Shout", HStoneClass.WARRIOR);
		fixCardClass(game, "Mortal Strike", HStoneClass.WARRIOR);
		fixCardClass(game, "Upgrade!", HStoneClass.WARRIOR);
		fixCardClass(game, "Brawl", HStoneClass.WARRIOR);
		fixCardClass(game, "Shield Slam", HStoneClass.WARRIOR);
		fixCardClass(game, "Battle Axe", HStoneClass.WARRIOR);
		fixCardClass(game, "Blood Fury", HStoneClass.WARLOCK);
		fixCardClass(game, "Heavy Axe", HStoneClass.WARRIOR);
		fixCardClass(game, "Fiery War Axe", HStoneClass.WARRIOR);
		fixCardClass(game, "Light's Justice", HStoneClass.PALADIN);
		fixCardClass(game, "Wicked Knife", HStoneClass.ROGUE);
		fixCardClass(game, "Arcanite Reaper", HStoneClass.WARRIOR);
		fixCardClass(game, "Assassin's Blade", HStoneClass.ROGUE);
		fixCardClass(game, "Stormforged Axe", HStoneClass.SHAMAN);
		fixCardClass(game, "Truesilver Champion", HStoneClass.PALADIN);
		fixCardClass(game, "Eaglehorn Bow", HStoneClass.HUNTER);
		fixCardClass(game, "Perdition's Blade", HStoneClass.ROGUE);
		fixCardClass(game, "Doomhammer", HStoneClass.SHAMAN);
		fixCardClass(game, "Gladiator's Longbow", HStoneClass.HUNTER);
		fixCardClass(game, "Gorehowl", HStoneClass.WARRIOR);
		fixCardClass(game, "Sword of Justice", HStoneClass.PALADIN);
		fixCardClass(game, "Ashbringer", HStoneClass.PALADIN);
	}

	private void fixCardClass(HStoneGame game, String string, HStoneClass clazz) {
		HStoneCardModel model = game.getCardModel(string);
		if (model != null)
			model.forClass(clazz);
	}
	
}
